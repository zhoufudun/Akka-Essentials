MyDispatcherExample{
	defaultDispatcher {
	  	 type = Dispatcher
	  	 executor = "fork-join-executor"
	  	 fork-join-executor {
       		parallelism-min = 2
    	    parallelism-factor = 2.0
		    parallelism-max = 6
	  	  }

	}
	
#	defaultDispatcher1 {
#	  	 type = Dispatcher
#	  	 executor = "thread-pool-executor"
#	  	 thread-pool-executor {
#	       		core-pool-size-min = 1
#	    	    core-pool-size-factor = 2.0
#			    core-pool-size-max = 6
#	  	  }
#    }
#    pinnedDispatcher {
#	  	 type = PinnedDispatcher
#	  	 executor = "thread-pool-executor"
#	  	 thread-pool-executor {
#	       		core-pool-size-min = 2
#	    	    core-pool-size-factor = 2.0
#			    core-pool-size-max = 10
#	  	  }
#	  	  throughput = 5
#  }
   FixDispatcher {
	  	 type = Dispatcher
         executor = "thread-pool-executor"
         thread-pool-executor {
              fixed-pool-size = 5 # 固定 5 个线程
         }
         throughput = 5 # 每个 Actor 一次最多处理 5 条消息
   }
#   balancingDispatcher1 {
#	  	 type = BalancingDispatcher
#	  	 executor = "fork-join-executor"
#	  	 fork-join-executor {
#       		parallelism-min = 2
#    	    parallelism-factor = 2.0
#		    parallelism-max = 6
#	  	  }
#	  	  throughput = 5
#   }
#
#   oesEvent-dispatcher {
#     type = Dispatcher
#     executor = "thread-pool-executor"
#     thread-pool-executor {
#       fixed-pool-size = 4
#     }
#   }

   CallingThreadDispatcher {
  	   type = akka.testkit.CallingThreadDispatcherConfigurator
   }


    box {
#     mailbox-type = "akka.dispatch.UnboundedMailbox"
      mailbox-type = "akka.dispatch.NonBlockingBoundedMailbox"
      mailbox-capacity = 1000
      mailbox-push-timeout-time = 10ms
    }


    my-mailbox {
        mailbox-type = "org.akka.essentials.java.study.mailBox.MyPriorityMailbox"
        mailbox-capacity = 50   # 最大消息数
        mailbox-push-timeout-time = 10s  # 发送超时
    }

}

kka {
  actor {
    debug {
      # 打印所有死信信息
      unhandled = on
    }
  }
}

